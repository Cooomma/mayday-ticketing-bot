# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.7.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
      - image: circleci/mongo:4.0.6
      - image: circleci/redis:5.0.2
      - image: circleci/mysql:8.0.3
        environment:
          MYSQL_HOST: 127.0.0.1
          MYSQL_ROOT_HOST: '%'
          MYSQL_ROOT_PASSWORD: 'test123456'
          MYSQL_DATABASE: mayday

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            sudo apt-get install mysql-client
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements-dev.txt
      
      - run:
          name: Wait for DB
          # preinstalled in circleci/* docker image
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 60s

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Generate Google Key
          environment:
            GOOGLE_KEY: 
          command: echo $GOOGLE_KEY | base64 --decode > key.json

      - run:
          name: Setup Code Climate test-reporter
          command: |
            # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: run test
          environment:
            CC_TEST_REPORTER_ID: 
          command: |
            # Notify Code Climate of a pending test report using `before-build`
            ./cc-test-reporter before-build

            # Pytest
            . venv/bin/activate
            pytest --cov=./mayday/ tests/* -vv
            coverage xml --omit="./mayday/constants/*"

            # Upload test report to Code Climate using `after-build`
            ./cc-test-reporter after-build -t coverage.py -r $CC_TEST_REPORTER_ID --exit-code $?

      - store_artifacts:
          path: test-reports
          destination: test-reports

